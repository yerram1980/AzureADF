{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "JaanuADF"
		},
		"ADLS_GEN1_LS_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'ADLS_GEN1_LS'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorageGen2_LS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageGen2_LS'"
		},
		"AzureDatabricks_LS_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks_LS'"
		},
		"BLOB_STORAGE_GEN2_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BLOB_STORAGE_GEN2_LS'"
		},
		"LS_ABLB_HIVEDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ABLB_HIVEDB'"
		},
		"LS_ABLS_GEN2_TGT_FILE_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ABLS_GEN2_TGT_FILE'"
		},
		"LS_ABLS_TARGET_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ABLS_TARGET'"
		},
		"LS_ABLS_practice1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ABLS_practice1'"
		},
		"LS_ADLS_GEN1_SRC_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'LS_ADLS_GEN1_SRC'"
		},
		"LS_ADLS_SRC_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'LS_ADLS_SRC'"
		},
		"LS_AzureBlob_Gen2_Tgt_File_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_AzureBlob_Gen2_Tgt_File'"
		},
		"LS_ONPREM_FILESYSTEM_SRC_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_ONPREM_FILESYSTEM_SRC'"
		},
		"LS_ONPREM_FILE_SRC_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_ONPREM_FILE_SRC'"
		},
		"LS_ORCL_ON_PREM_SRC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ORCL_ON_PREM_SRC'"
		},
		"LS_ORCL_SRC_DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ORCL_SRC_DB'"
		},
		"Metadata_SQLDB_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Metadata_SQLDB_LS'"
		},
		"ADLS_GEN1_LS_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://databricksadlsgen1.azuredatalakestore.net/webhdfs/v1"
		},
		"ADLS_GEN1_LS_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "9768d5c8-5df2-4125-818b-37b0d3472218"
		},
		"ADLS_GEN1_LS_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "b38c808f-390b-4056-9a18-d5a9b571cf98"
		},
		"ADLS_GEN1_LS_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "532945f0-7bb0-4f10-b851-9de86e121ae7"
		},
		"ADLS_GEN1_LS_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "dev_rg"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pysparkstorageblob.dfs.core.windows.net"
		},
		"AzureDataLakeStorageGen2_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pysparkstorageblob.dfs.core.windows.net"
		},
		"LS_ABLS_GEN2_TGT_FILE_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakegen2pyspark.dfs.core.windows.net"
		},
		"LS_ABLS_practice1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pysparkstorageblob.dfs.core.windows.net"
		},
		"LS_ADLS_GEN1_SRC_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://pysparkadlsgen.azuredatalakestore.net/webhdfs/v1"
		},
		"LS_ADLS_GEN1_SRC_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "270a7daf-b949-440a-a3a4-cf378861a5b0"
		},
		"LS_ADLS_GEN1_SRC_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "d16bbdb7-3f93-4c84-ba01-82c59277ae9e"
		},
		"LS_ADLS_GEN1_SRC_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "b2db675a-4ae9-4a77-a21d-c2b56dea54cd"
		},
		"LS_ADLS_GEN1_SRC_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "dev_rg"
		},
		"LS_ADLS_SRC_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://databricksadlsgen1.azuredatalakestore.net/webhdfs/v1"
		},
		"LS_ADLS_SRC_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "9768d5c8-5df2-4125-818b-37b0d3472218"
		},
		"LS_ADLS_SRC_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "b38c808f-390b-4056-9a18-d5a9b571cf98"
		},
		"LS_ADLS_SRC_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "532945f0-7bb0-4f10-b851-9de86e121ae7"
		},
		"LS_ADLS_SRC_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "dev_rg"
		},
		"LS_AzureBlob_Gen2_Tgt_File_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://jaanusa1.dfs.core.windows.net"
		},
		"LS_DEV_keyvault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://pyspark-dev-kv.vault.azure.net/"
		},
		"LS_ONPREM_FILESYSTEM_SRC_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "E:\\files\\Data_Files\\onprem_data"
		},
		"LS_ONPREM_FILESYSTEM_SRC_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "raveendra"
		},
		"LS_ONPREM_FILE_SRC_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "E:\\files\\Data_Files\\onprem_data"
		},
		"LS_ONPREM_FILE_SRC_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "raveendra"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromBlob_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_qsl",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "storagecontainer/sourcedata/emp.xlsx"
							},
							{
								"name": "Destination",
								"value": "container2/targetdata/targetdata"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_qsl",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_qsl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-12T02:36:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_qsl')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_qsl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACT_LOAD_PIPELINE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SALES_DATABRICKS_PIPE_LINE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SALES_DATABRICKS_PIPE_LINE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SALES_DATABRICKS_PIPE_LINE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Project_Training_nov_batch/NB_sales_fact"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SALES_DATABRICKS_PIPE_LINE')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Job_Wise_TotalSal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JOBWISE_SAL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "JOBWISE_SAL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"DEPTSRC": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/JOBWISE_SAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AGGREGATE_DF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aggregate_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMP": {},
									"TARGET": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "surrogatekey_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:49:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aggregate_dataflow')]",
				"[concat(variables('factoryId'), '/dataflows/surrogatekey_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Aggregate_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Aggregate_Dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aggregate_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMP": {},
									"TARGET": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-21T01:53:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aggregate_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATAFLOW_ADLS_TO_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "innerjoins",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCEMP": {},
									"SRCDEPT": {},
									"targetblob": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-15T15:03:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/innerjoins')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATAFLOW_FULLOUTER_JOIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fullouterjoin",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "fulljoin",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"DEPTSRC": {},
									"target": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-15T15:11:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/fulljoin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATAFLOW_LEFTJOIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "leftjoin",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"DEPTSRC": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-15T15:11:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/leftjoin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATAFLOW_LOOKPUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "lookup",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"DEPTSRC": {},
									"target": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "exists_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"DEPTSRC": {},
									"target": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow3",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "multiple_Targets",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"target10": {},
									"target20": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-15T15:33:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/lookup')]",
				"[concat(variables('factoryId'), '/dataflows/exists_dataflow')]",
				"[concat(variables('factoryId'), '/dataflows/multiple_Targets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATAFLOW_RIGHT_JOIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "rightjoin",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"DEPTSRC": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-15T15:11:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/rightjoin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DELETE_LOOKUP_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ABLS_GEN2_TGT_FILE",
									"type": "LinkedServiceReference"
								},
								"path": "sales"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Delete1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureDataLakeStoreReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-17T15:31:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLS_GEN2_TGT_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DENSE_RANK_DF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "RANK_DENSE_RANK_DF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"TARGET": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:49:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/RANK_DENSE_RANK_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Dataflow_Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCEMPADLS": {},
									"SRCDEPTADLS": {},
									"EMPTARGETBLOB": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-19T02:32:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Dataflow_lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookup_dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "lookup_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCEMP": {},
									"SRCDEPT": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "exist_dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "lookup_dataflow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "exist_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCEMP": {},
									"SRCDEPT": {},
									"TARGETEMP": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "union_dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "exist_dataflow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "union_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCEMP": {},
									"SRC2EMP": {},
									"UNIONTARGET": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Derived_column",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "union_dataflow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Derived_column",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"TARGETFILE": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-20T02:36:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/lookup_dataflow')]",
				"[concat(variables('factoryId'), '/dataflows/exist_dataflow')]",
				"[concat(variables('factoryId'), '/dataflows/union_dataflow')]",
				"[concat(variables('factoryId'), '/dataflows/Derived_column')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ONPREM_ORCL_TO_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ORCL_TO_BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": "empdata.txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ORCL_EMP_DATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-11T14:18:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ORCL_EMP_DATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PIVOT_DF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Pivot_Dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:49:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Pivot_Dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pipeline_ACtivities')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DENSE_RANK_DF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 60
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"itemName",
								"itemType",
								"size",
								"lastModified",
								"structure"
							],
							"storeSettings": {
								"type": "AzureDataLakeStoreReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-17T15:31:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DENSE_RANK_DF')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FILE_DEPT_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Window_Unpivot')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Window_Dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "window_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"target": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "UNPIVOT_DATAFLOW",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "unpivot_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"target": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "flatten",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flattern_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"TARGET": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-17T15:31:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/window_dataflow')]",
				"[concat(variables('factoryId'), '/dataflows/unpivot_dataflow')]",
				"[concat(variables('factoryId'), '/dataflows/flattern_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SALES_DATABRICKS_PIPE_LINE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CHANNEL_DIM",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Project_Training_nov_batch/NB_channels_dim"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "COUNTRIES_DIM",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Project_Training_nov_batch/NB_countries_dim"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CUSTOMERS_DIM",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Project_Training_nov_batch/NB_customers_dim"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PRODUCT_DIM",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Project_Training_nov_batch/NB_product_dim"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PROMOTIONS_DIM",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Project_Training_nov_batch/NB_promotions_dim"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_LS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "TIMES_DIM",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Project_Training_nov_batch/NB_times_dim"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sort_With_Surrogate_Key')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sort_With_surrogate_key",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Sort_With_surrogate_key",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Sort_With_surrogate_key')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Surrogate_key_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "surrogate_key",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "surrogate_key",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/surrogate_key')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/activities_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Pipeline_Name",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_name",
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Array_type",
						"type": "AppendVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_List",
							"value": {
								"value": "[['Raj','Chandu','Mohan','Srini','Prasad']",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ADF_NAME",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_name",
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Run_Id",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_name",
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Trigger_Id",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_name",
							"value": {
								"value": "@pipeline().TriggerId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Trigger_Name",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_name",
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Trigger_Type",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_name",
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"P_Name": {
						"type": "string",
						"defaultValue": "Raju"
					},
					"P_Age": {
						"type": "string",
						"defaultValue": "35"
					}
				},
				"variables": {
					"V_name": {
						"type": "String",
						"defaultValue": "Ram"
					},
					"V_List": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/child_load_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Hello from NDC Sydney!!!",
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PROC_ETL_LOAD_STATUS]",
										"storedProcedureParameters": {
											"activityname": {
												"value": "copyActivity",
												"type": "String"
											},
											"activitystatus": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											},
											"Createdon": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"endtime": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Copy data1').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"readrows": {
												"value": {
													"value": "@activity('Copy data1').output.dataRead",
													"type": "Expression"
												},
												"type": "String"
											},
											"runid": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"starttime": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].start",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"writerows": {
												"value": {
													"value": "@activity('Copy data1').output.dataWritten",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Metadata_SQLDB_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureDataLakeStoreReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Source_ADLS_DS",
											"type": "DatasetReference",
											"parameters": {
												"FolderPath": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Target_BLOB_DS",
											"type": "DatasetReference",
											"parameters": {
												"FolderPath": {
													"value": "@pipeline().parameters.TargetStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.TargetStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "*.csv",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Source_Folder_Metadata_DS",
								"type": "DatasetReference",
								"parameters": {
									"FolderPath": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureDataLakeStoreReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'File')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"SourceStore_Location": {
						"type": "string"
					},
					"SourceStore_Directory": {
						"type": "string"
					},
					"TargetStore_Location": {
						"type": "string"
					},
					"TargetStore_Directory": {
						"type": "string"
					},
					"SourceFileneme": {
						"type": "string"
					},
					"TargetFilename": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_Folder_Metadata_DS')]",
				"[concat(variables('factoryId'), '/linkedServices/Metadata_SQLDB_LS')]",
				"[concat(variables('factoryId'), '/datasets/Source_ADLS_DS')]",
				"[concat(variables('factoryId'), '/datasets/Target_BLOB_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/main_load_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Main ETL Load and its getting metadata\nand calling each pipeline..",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSQLJOBDataDS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "child_load_pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "child_load_pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"SourceStore_Location": {
												"value": "@item().src_folderpath",
												"type": "Expression"
											},
											"SourceStore_Directory": {
												"value": "@item().directory",
												"type": "Expression"
											},
											"TargetStore_Location": {
												"value": "@item().tgt_folderpath",
												"type": "Expression"
											},
											"TargetStore_Directory": {
												"value": "@item().directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLJOBDataDS')]",
				"[concat(variables('factoryId'), '/pipelines/child_load_pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureDataLakeStoreReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Delete1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ENAME",
							"value": "RAJ"
						}
					},
					{
						"name": "Set variable1_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LOC",
							"value": "HYDERABAD"
						}
					},
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Set variable1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ADDRESS",
							"value": "BANGALORE"
						}
					},
					{
						"name": "Append variable1_copy1",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Append variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ADDRESS",
							"value": "HYDERABAD"
						}
					}
				],
				"parameters": {
					"SOURCEPATH": {
						"type": "string"
					},
					"TARGETPATH": {
						"type": "string"
					}
				},
				"variables": {
					"ENAME": {
						"type": "String",
						"defaultValue": "SRINI"
					},
					"LOC": {
						"type": "String",
						"defaultValue": "BANGALORE"
					},
					"ADDRESS": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T15:31:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLJOBDataDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Metadata_SQLDB_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "jobname",
						"type": "varchar"
					},
					{
						"name": "src_folderpath",
						"type": "varchar"
					},
					{
						"name": "tgt_folderpath",
						"type": "varchar"
					},
					{
						"name": "directory",
						"type": "varchar"
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "processedon",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "JOB_LIST"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Metadata_SQLDB_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABLB_EMP_TARGET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLS_TARGET",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "targetdata",
						"container": "storagecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLS_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABLS_EMP_TARGET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLS_TARGET",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "emp_data",
						"container": "target"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLS_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABLS_TGT_EMP_FILE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLS_GEN2_TGT_FILE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "emp_data",
						"fileSystem": "target"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLS_GEN2_TGT_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABLS_TIMES_TARGET_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLS_practice1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "projectz/target/times",
						"fileSystem": "sales"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLS_practice1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_DEPART_MANAGER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "dept_manager.csv",
						"folderPath": "source_data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "dept_no",
						"type": "String"
					},
					{
						"name": "emp_no",
						"type": "String"
					},
					{
						"name": "from_date",
						"type": "String"
					},
					{
						"name": "to_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_EMP_FILE_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_GEN1_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "emp.csv",
						"folderPath": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPNO",
						"type": "String"
					},
					{
						"name": "ENAME",
						"type": "String"
					},
					{
						"name": "JOB",
						"type": "String"
					},
					{
						"name": "MGR",
						"type": "String"
					},
					{
						"name": "HIREDATE",
						"type": "String"
					},
					{
						"name": "SAL",
						"type": "String"
					},
					{
						"name": "COMM",
						"type": "String"
					},
					{
						"name": "DEPTNO",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_GEN1_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_EMP_UNION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "emp_union.csv",
						"folderPath": "source_data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPNO",
						"type": "String"
					},
					{
						"name": "ENAME",
						"type": "String"
					},
					{
						"name": "JOB",
						"type": "String"
					},
					{
						"name": "MGR",
						"type": "String"
					},
					{
						"name": "HIREDATE",
						"type": "String"
					},
					{
						"name": "SAL",
						"type": "String"
					},
					{
						"name": "COMM",
						"type": "String"
					},
					{
						"name": "DEPTNO",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_FILE_DEPT_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_GEN1_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "dept.csv",
						"folderPath": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Deptno",
						"type": "String"
					},
					{
						"name": "Dname",
						"type": "String"
					},
					{
						"name": "Loc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_GEN1_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_JSON_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_GEN1_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "sample_json.json",
						"folderPath": "source"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"location": {
							"type": "string"
						},
						"satellites": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"goods": {
							"type": "object",
							"properties": {
								"trade": {
									"type": "boolean"
								},
								"customers": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"orders": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"orderId": {
												"type": "integer"
											},
											"orderTotal": {
												"type": "number"
											},
											"shipped": {
												"type": "object",
												"properties": {
													"orderItems": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"itemName": {
																	"type": "string"
																},
																"itemQty": {
																	"type": "integer"
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_GEN1_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_UNPIVOT_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "unpivot.csv",
						"folderPath": "source_data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_number",
						"type": "String"
					},
					{
						"name": "customer",
						"type": "String"
					},
					{
						"name": "apple",
						"type": "String"
					},
					{
						"name": "banana",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_TIMES_SRC_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "06-12-2020-10-20-13.csv",
						"folderPath": "source/times"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_UNPIVOT_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_GEN1_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "unpivot.csv",
						"folderPath": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_number",
						"type": "String"
					},
					{
						"name": "customer",
						"type": "String"
					},
					{
						"name": "apple",
						"type": "String"
					},
					{
						"name": "banana",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_GEN1_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DEPT_SRC_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "dept.csv",
						"folderPath": "source_data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Deptno",
						"type": "String"
					},
					{
						"name": "Dname",
						"type": "String"
					},
					{
						"name": "Loc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_EMP_SRC_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "emp.csv",
						"folderPath": "source_data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPNO",
						"type": "String"
					},
					{
						"name": "ENAME",
						"type": "String"
					},
					{
						"name": "JOB",
						"type": "String"
					},
					{
						"name": "MGR",
						"type": "String"
					},
					{
						"name": "HIREDATE",
						"type": "String"
					},
					{
						"name": "SAL",
						"type": "String"
					},
					{
						"name": "COMM",
						"type": "String"
					},
					{
						"name": "DEPTNO",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ONPREM_EMP_FILE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ONPREM_FILESYSTEM_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "emp.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPNO",
						"type": "String"
					},
					{
						"name": "ENAME",
						"type": "String"
					},
					{
						"name": "JOB",
						"type": "String"
					},
					{
						"name": "MGR",
						"type": "String"
					},
					{
						"name": "HIREDATE",
						"type": "String"
					},
					{
						"name": "SAL",
						"type": "String"
					},
					{
						"name": "COMM",
						"type": "String"
					},
					{
						"name": "DEPTNO",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ONPREM_FILESYSTEM_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ORCL_EMP_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ORCL_SRC_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "SCOTT",
					"table": "EMP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ORCL_SRC_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ORCL_SRC_EMP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ORCL_ON_PREM_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "SCOTT",
					"table": "EMP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ORCL_ON_PREM_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_qsl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "targetdata",
						"folderPath": "targetdata",
						"fileSystem": "container2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_DEPT_CSV_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_GEN1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "dept.csv",
						"folderPath": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Deptno",
						"type": "String"
					},
					{
						"name": "Dname",
						"type": "String"
					},
					{
						"name": "Loc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_GEN1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_EMP_CSV_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_GEN1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "emp.csv",
						"folderPath": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPNO",
						"type": "String"
					},
					{
						"name": "ENAME",
						"type": "String"
					},
					{
						"name": "JOB",
						"type": "String"
					},
					{
						"name": "MGR",
						"type": "String"
					},
					{
						"name": "HIREDATE",
						"type": "String"
					},
					{
						"name": "SAL",
						"type": "String"
					},
					{
						"name": "COMM",
						"type": "String"
					},
					{
						"name": "DEPTNO",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_GEN1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_qsl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "emp",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "emp.xlsx",
						"folderPath": "sourcedata",
						"fileSystem": "storagecontainer"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "EMPNO",
						"type": "String"
					},
					{
						"name": "ENAME",
						"type": "String"
					},
					{
						"name": "JOB",
						"type": "String"
					},
					{
						"name": "MGR",
						"type": "String"
					},
					{
						"name": "HIREDATE",
						"type": "String"
					},
					{
						"name": "SAL",
						"type": "String"
					},
					{
						"name": "COMM",
						"type": "String"
					},
					{
						"name": "DEPTNO",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_ADLS_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_GEN1_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": {
							"value": "@concat(dataset().Directory,'/',dataset().filename)",
							"type": "Expression"
						},
						"folderPath": "staging"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_GEN1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Folder_Metadata_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_GEN1_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"folderPath": {
							"value": "@concat(dataset().FolderPath,'/',dataset().Directory)",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_GEN1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TARGET_EMP_BLOB_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BLOB_STORAGE_GEN2_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "target",
						"container": "pysparkcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BLOB_STORAGE_GEN2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Target_BLOB_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BLOB_STORAGE_GEN2_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@concat(dataset().FolderPath)",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BLOB_STORAGE_GEN2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_GEN1_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('ADLS_GEN1_LS_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('ADLS_GEN1_LS_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_GEN1_LS_servicePrincipalKey')]"
					},
					"tenant": "[parameters('ADLS_GEN1_LS_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('ADLS_GEN1_LS_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('ADLS_GEN1_LS_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Practice",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageGen2_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageGen2_LS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageGen2_LS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3393729793471131.11.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_LS_accessToken')]"
					},
					"existingClusterId": "1226-114500-cots786"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLOB_STORAGE_GEN2_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BLOB_STORAGE_GEN2_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_HIVEDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_ABLB_HIVEDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLS_GEN2_TGT_FILE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ABLS_GEN2_TGT_FILE_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ABLS_GEN2_TGT_FILE_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLS_TARGET')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_ABLS_TARGET_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLS_practice1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "practice",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ABLS_practice1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ABLS_practice1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_GEN1_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('LS_ADLS_GEN1_SRC_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('LS_ADLS_GEN1_SRC_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_GEN1_SRC_servicePrincipalKey')]"
					},
					"tenant": "[parameters('LS_ADLS_GEN1_SRC_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('LS_ADLS_GEN1_SRC_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('LS_ADLS_GEN1_SRC_properties_typeProperties_resourceGroupName')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('LS_ADLS_SRC_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('LS_ADLS_SRC_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_SRC_servicePrincipalKey')]"
					},
					"tenant": "[parameters('LS_ADLS_SRC_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('LS_ADLS_SRC_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('LS_ADLS_SRC_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureBlob_Gen2_Tgt_File')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AzureBlob_Gen2_Tgt_File_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AzureBlob_Gen2_Tgt_File_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_DEV_keyvault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_DEV_keyvault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ONPREM_FILESYSTEM_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_ONPREM_FILESYSTEM_SRC_properties_typeProperties_host')]",
					"userId": "[parameters('LS_ONPREM_FILESYSTEM_SRC_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_ONPREM_FILESYSTEM_SRC_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ONPREM_FILE_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_ONPREM_FILE_SRC_properties_typeProperties_host')]",
					"userId": "[parameters('LS_ONPREM_FILE_SRC_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_ONPREM_FILE_SRC_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ORCL_ON_PREM_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('LS_ORCL_ON_PREM_SRC_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ORCL_SRC_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('LS_ORCL_SRC_DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Metadata_SQLDB_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Metadata_SQLDB_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_qsl')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyFromBlob_ADLS",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2021-01-12T02:27:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyFromBlob_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Variables_Triggers')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "activities_pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2021-01-28T14:47:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/activities_pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/jaanuseflhosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Aggregate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_EMP_CSV_DS",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						},
						{
							"dataset": {
								"referenceName": "SRC_DEPT_CSV_DS",
								"type": "DatasetReference"
							},
							"name": "DEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TARGET_EMP_BLOB_DS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "INNERJOIN"
						},
						{
							"name": "SELECTFEWFIELDS"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DEPTSRC\nEMPSRC, DEPTSRC join(EMPSRC@DEPTNO == DEPTSRC@Deptno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> INNERJOIN\nINNERJOIN select(mapColumn(\n\t\tEMPNO,\n\t\tENAME,\n\t\tJOB,\n\t\tMGR,\n\t\tHIREDATE,\n\t\tSAL,\n\t\tCOMM,\n\t\tDEPTNO = EMPSRC@DEPTNO,\n\t\tDeptno = DEPTSRC@Deptno,\n\t\tDname,\n\t\tLoc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SELECTFEWFIELDS\nSELECTFEWFIELDS aggregate(groupBy(Dname),\n\tSUM_OF_SAL = sum(toInteger(SAL)+iifNull(toInteger(COMM),0))) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['emp_aggregate_csv.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_EMP_CSV_DS')]",
				"[concat(variables('factoryId'), '/datasets/SRC_DEPT_CSV_DS')]",
				"[concat(variables('factoryId'), '/datasets/TARGET_EMP_BLOB_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aggregate_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "TARGET"
						}
					],
					"transformations": [
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMP\nEMP aggregate(groupBy(JOB),\n\tSUM_SAL = sum(toInteger(SAL)),\n\t\tMIN_SAL = min(toInteger(SAL)),\n\t\tMAX_SAL = max(toInteger(SAL))) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['aggregate.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TARGET"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Derived_column')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "TARGETFILE"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "SurrogateKey1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 derive(TOTAL_SAL = toInteger(SAL) + iifNull(toInteger(COMM),0)) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tEMPLOYEE_NUMBER = EMPNO,\n\t\tFULL_NAME = ENAME,\n\t\tJOB,\n\t\tSALARAY = SAL,\n\t\tCOMM,\n\t\tDEPTNO,\n\t\tTOTAL_SAL\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 keyGenerate(output(EMPKEY as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['derivedcolumn.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TARGETFILE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_EMP_SRC_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLB_EMP_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JOBWISE_SAL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_EMP_CSV_DS",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						},
						{
							"dataset": {
								"referenceName": "SRC_DEPT_CSV_DS",
								"type": "DatasetReference"
							},
							"name": "DEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TARGET_EMP_BLOB_DS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DEPTSRC\nEMPSRC, DEPTSRC join(EMPSRC@DEPTNO == DEPTSRC@Deptno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive(TOTAL_SAL = toInteger(SAL) +iifNull(toInteger(COMM),0)) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tEMPNO,\n\t\tENAME,\n\t\tJOB,\n\t\tMGR,\n\t\tHIREDATE,\n\t\tSAL,\n\t\tCOMM,\n\t\tDEPTNO = EMPSRC@DEPTNO,\n\t\tDeptno = DEPTSRC@Deptno,\n\t\tDname,\n\t\tLoc,\n\t\tTOTAL_SAL\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(JOB),\n\tSUM_OF_SAL = sum(TOTAL_SAL)) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['JOB_WISE_SAL'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_EMP_CSV_DS')]",
				"[concat(variables('factoryId'), '/datasets/SRC_DEPT_CSV_DS')]",
				"[concat(variables('factoryId'), '/datasets/TARGET_EMP_BLOB_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pivot_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Pivot1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nEMPSRC pivot(groupBy(JOB),\n\tpivotBy(DEPTNO),\n\tSUM_SAL_BY_DEPTNO = sum(toInteger(SAL)),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> Pivot1\nPivot1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['pivot.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_EMP_SRC_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLB_EMP_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RANK_DENSE_RANK_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "TARGET"
						}
					],
					"transformations": [
						{
							"name": "Rank1"
						},
						{
							"name": "DENSERANK"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as integer,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nEMPSRC rank(desc(SAL, true),\n\toutput(RANK as long)) ~> Rank1\nRank1 rank(desc(SAL, true),\n\toutput(DENSE_RANK as long),\n\tdense: true) ~> DENSERANK\nDENSERANK sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['rankdense.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TARGET"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rank_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "EMMPSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Rank1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMMPSRC\nEMMPSRC rank(desc(toInteger(SAL), true),\n\toutput(SAL_RANK as long)) ~> Rank1\nRank1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['rank.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_EMP_SRC_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLB_EMP_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sort_With_surrogate_key')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_EMP_CSV_DS",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TARGET_EMP_BLOB_DS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Sort1"
						},
						{
							"name": "SurrogateKey1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nEMPSRC sort(asc(ENAME, true)) ~> Sort1\nSort1 keyGenerate(output(EMP_KEY as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SORT_With_Surrogate_key'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_EMP_CSV_DS')]",
				"[concat(variables('factoryId'), '/datasets/TARGET_EMP_BLOB_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCEMPADLS"
						},
						{
							"dataset": {
								"referenceName": "DS_DEPT_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCDEPTADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "EMPTARGETBLOB"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Sort1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCEMPADLS\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCDEPTADLS\nSRCEMPADLS, SRCDEPTADLS join(SRCEMPADLS@DEPTNO == SRCDEPTADLS@Deptno,\n\tjoinType:'outer',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(SRCEMPADLS@DEPTNO=='30') ~> Filter1\nFilter1 sort(asc(ENAME, true)) ~> Sort1\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['empdatafile.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EMPTARGETBLOB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_EMP_SRC_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_DEPT_SRC_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLB_EMP_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/exist_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCEMP"
						},
						{
							"dataset": {
								"referenceName": "DS_DEPT_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCDEPT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "TARGETEMP"
						}
					],
					"transformations": [
						{
							"name": "Exists1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCEMP\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCDEPT\nSRCEMP, SRCDEPT exists(SRCEMP@DEPTNO == SRCDEPT@Deptno,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nExists1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['exist_emp.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TARGETEMP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_EMP_SRC_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_DEPT_SRC_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLB_EMP_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/exists_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference"
							},
							"name": "DEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "target"
						}
					],
					"transformations": [
						{
							"name": "Exists1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DEPTSRC\nEMPSRC, DEPTSRC exists(EMPSRC@DEPTNO == DEPTSRC@Deptno,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nExists1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['exists-leftsemijoin.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> target"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FILE_DEPT_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/flattern_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_JSON_SRC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "TARGET"
						}
					],
					"transformations": [
						{
							"name": "SATELLITES"
						},
						{
							"name": "CUSTOMERS"
						},
						{
							"name": "FLATTEN"
						},
						{
							"name": "SHIPPED"
						}
					],
					"script": "source(output(\n\t\tname as string,\n\t\tlocation as string,\n\t\tsatellites as string[],\n\t\tgoods as (trade as boolean, customers as string[], orders as (orderId as string, orderTotal as double, shipped as (orderItems as (itemName as string, itemQty as string)[]))[])\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'singleDocument') ~> source1\nsource1 foldDown(unroll(satellites),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\tgoods\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SATELLITES\nSATELLITES foldDown(unroll(goods.customers),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\tcustomers = goods.customers,\n\t\torders = goods.orders\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> CUSTOMERS\nCUSTOMERS foldDown(unroll(orders),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\tcustomers,\n\t\torders\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FLATTEN\nFLATTEN foldDown(unroll(orders.shipped.orderItems),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\tcustomers,\n\t\torderId = orders.orderId,\n\t\torderTotal = orders.orderTotal,\n\t\titemName = orders.shipped.orderItems.itemName,\n\t\titemQty = orders.shipped.orderItems.itemQty\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SHIPPED\nSHIPPED sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['flatten.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TARGET"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_JSON_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fulljoin')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference"
							},
							"name": "DEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "target"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DEPTSRC\nEMPSRC, DEPTSRC join(EMPSRC@DEPTNO == DEPTSRC@Deptno,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['fullouterjoin.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> target"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FILE_DEPT_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/innerjoins')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "SRCEMP"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference"
							},
							"name": "SRCDEPT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "targetblob"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "deptnofilter"
						},
						{
							"name": "Sort1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> SRCEMP\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCDEPT\nSRCEMP, SRCDEPT join(SRCEMP@DEPTNO == SRCDEPT@Deptno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(SRCEMP@DEPTNO=='30') ~> deptnofilter\ndeptnofilter sort(asc(ENAME, true)) ~> Sort1\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> targetblob"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FILE_DEPT_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_flattern_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_JSON_SRC",
								"type": "DatasetReference"
							},
							"name": "JSONDS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "jsonflattern"
						}
					],
					"transformations": [
						{
							"name": "satellites"
						},
						{
							"name": "Customers"
						},
						{
							"name": "orders"
						},
						{
							"name": "shipped"
						}
					],
					"script": "source(output(\n\t\tname as string,\n\t\tlocation as string,\n\t\tsatellites as string[],\n\t\tgoods as (trade as boolean, customers as string[], orders as (orderId as string, orderTotal as double, shipped as (orderItems as (itemName as string, itemQty as string)[]))[])\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'singleDocument') ~> JSONDS\nJSONDS foldDown(unroll(satellites),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\tgoods\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> satellites\nsatellites foldDown(unroll(goods.customers),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\ttrade = goods.trade,\n\t\tcustomers = goods.customers,\n\t\torders = goods.orders\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Customers\nCustomers foldDown(unroll(orders),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\ttrade,\n\t\tcustomers,\n\t\torders\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> orders\norders foldDown(unroll(orders.shipped.orderItems),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\ttrade,\n\t\tcustomers,\n\t\torderId = orders.orderId,\n\t\torderTotal = orders.orderTotal,\n\t\titemName = orders.shipped.orderItems.itemName,\n\t\titemQty = orders.shipped.orderItems.itemQty\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> shipped\nshipped sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['jsonflattern.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> jsonflattern"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_JSON_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLB_EMP_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/leftjoin')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference"
							},
							"name": "DEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DEPTSRC\nEMPSRC, DEPTSRC join(EMPSRC@DEPTNO == DEPTSRC@Deptno,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['leftjoin.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FILE_DEPT_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference"
							},
							"name": "DEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "target"
						}
					],
					"transformations": [
						{
							"name": "Lookup1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DEPTSRC\nEMPSRC, DEPTSRC lookup(EMPSRC@DEPTNO == DEPTSRC@Deptno,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 derive(TOTAL_SALARY = toInteger(SAL) + iifNull(toInteger(COMM),0)) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tEMPLOYEE_NUMBER = EMPNO,\n\t\tEMPLOYEE_NAME = ENAME,\n\t\tJOB,\n\t\tMANAGER_ID = MGR,\n\t\tHIREDATE,\n\t\tSALARY = SAL,\n\t\tCOMM,\n\t\tDEPARTMNET_NUMBER = EMPSRC@DEPTNO,\n\t\tTOTAL_SALARY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['lookupwithselect.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> target"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FILE_DEPT_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCEMP"
						},
						{
							"dataset": {
								"referenceName": "DS_DEPT_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCDEPT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Lookup1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCEMP\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCDEPT\nSRCEMP, SRCDEPT lookup(SRCEMP@DEPTNO == SRCDEPT@Deptno,\n\tmultiple: false,\n\tpickup: 'first',\n\tasc(SRCDEPT@Deptno, true),\n\tbroadcast: 'auto')~> Lookup1\nLookup1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['lookupempfile.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_EMP_SRC_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_DEPT_SRC_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLB_EMP_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/multiple_Targets')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "target10"
						},
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "target20"
						},
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nEMPSRC split(DEPTNO=='10',\n\tDEPTNO=='20',\n\tDEPTNO=='30',\n\tdisjoint: false) ~> ConditionalSplit1@(DEPTNO10, DEPTNO20, DEPTNO30, DEPTNO80)\nConditionalSplit1@DEPTNO10 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['target10.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> target10\nConditionalSplit1@DEPTNO20 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['target20.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> target20\nConditionalSplit1@DEPTNO30 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['target30.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nConditionalSplit1@DEPTNO80 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['target80.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rightjoin')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference"
							},
							"name": "DEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DEPTSRC\nEMPSRC, DEPTSRC join(EMPSRC@DEPTNO == DEPTSRC@Deptno,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['rightjoin.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FILE_DEPT_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/surrogate_key')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_EMP_CSV_DS",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TARGET_EMP_BLOB_DS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "SurrogateKey1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nEMPSRC keyGenerate(output(EMP_KEY as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['emp_surrogate_key'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_EMP_CSV_DS')]",
				"[concat(variables('factoryId'), '/datasets/TARGET_EMP_BLOB_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/surrogatekey_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "SurrogateKey1"
						}
					],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nEMPSRC keyGenerate(output(EMPKEY as long),\n\tstartAt: 1000L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/union_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCEMP"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_UNION",
								"type": "DatasetReference"
							},
							"name": "SRC2EMP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "UNIONTARGET"
						}
					],
					"transformations": [
						{
							"name": "Union1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCEMP\nsource(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRC2EMP\nSRCEMP, SRC2EMP union(byName: false)~> Union1\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['uniondata.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UNIONTARGET"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_EMP_SRC_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_UNION')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLB_EMP_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unpivot_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_UNPIVOT_SRC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "target"
						}
					],
					"transformations": [
						{
							"name": "Unpivot1"
						}
					],
					"script": "source(output(\n\t\torder_number as string,\n\t\tcustomer as string,\n\t\tapple as string,\n\t\tbanana as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 unpivot(output(\n\t\tPRODUCT_NAME as string,\n\t\tQuantity as string\n\t),\n\tungroupBy(order_number,\n\t\tcustomer),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot1\nUnpivot1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['unpivot.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> target"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_UNPIVOT_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/window_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "target"
						}
					],
					"transformations": [
						{
							"name": "Window1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nEMPSRC window(over(JOBNAME = JOB),\n\tdesc(toInteger(SAL), true),\n\tRANK = rank(),\n\t\tDENSERANK = denseRank(),\n\t\tLEAD = lead(SAL),\n\t\tLAG = lag(SAL),\n\t\tCUMM_SAL = sum(toInteger(SAL))) ~> Window1\nWindow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['window.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> target"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EMP_FILE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLS_TGT_EMP_FILE')]"
			]
		}
	]
}