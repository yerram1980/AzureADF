{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "JaanuADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Sort_With_Surrogate_Key')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sort_With_surrogate_key",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Sort_With_surrogate_key",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Surrogate_key_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "surrogate_key",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "surrogate_key",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPSRC": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/main_load_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Main ETL Load and its getting metadata\nand calling each pipeline..",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSQLJOBDataDS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "child_load_pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "child_load_pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"SourceStore_Location": {
												"value": "@item().src_folderpath",
												"type": "Expression"
											},
											"SourceStore_Directory": {
												"value": "@item().directory",
												"type": "Expression"
											},
											"TargetStore_Location": {
												"value": "@item().tgt_folderpath",
												"type": "Expression"
											},
											"TargetStore_Directory": {
												"value": "@item().directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureDataLakeStoreReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Delete1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ENAME",
							"value": "RAJ"
						}
					},
					{
						"name": "Set variable1_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LOC",
							"value": "HYDERABAD"
						}
					},
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Set variable1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ADDRESS",
							"value": "BANGALORE"
						}
					},
					{
						"name": "Append variable1_copy1",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Append variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ADDRESS",
							"value": "HYDERABAD"
						}
					}
				],
				"parameters": {
					"SOURCEPATH": {
						"type": "string"
					},
					"TARGETPATH": {
						"type": "string"
					}
				},
				"variables": {
					"ENAME": {
						"type": "String",
						"defaultValue": "SRINI"
					},
					"LOC": {
						"type": "String",
						"defaultValue": "BANGALORE"
					},
					"ADDRESS": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T15:31:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_qsl')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyFromBlob_ADLS",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2021-01-12T02:27:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aggregate_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "TARGET"
						}
					],
					"transformations": [
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMP\nEMP aggregate(groupBy(JOB),\n\tSUM_SAL = sum(toInteger(SAL)),\n\t\tMIN_SAL = min(toInteger(SAL)),\n\t\tMAX_SAL = max(toInteger(SAL))) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['aggregate.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TARGET"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Derived_column')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "TARGETFILE"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "SurrogateKey1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 derive(TOTAL_SAL = toInteger(SAL) + iifNull(toInteger(COMM),0)) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tEMPLOYEE_NUMBER = EMPNO,\n\t\tFULL_NAME = ENAME,\n\t\tJOB,\n\t\tSALARAY = SAL,\n\t\tCOMM,\n\t\tDEPTNO,\n\t\tTOTAL_SAL\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 keyGenerate(output(EMPKEY as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['derivedcolumn.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TARGETFILE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pivot_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Pivot1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nEMPSRC pivot(groupBy(JOB),\n\tpivotBy(DEPTNO),\n\tSUM_SAL_BY_DEPTNO = sum(toInteger(SAL)),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> Pivot1\nPivot1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['pivot.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RANK_DENSE_RANK_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "TARGET"
						}
					],
					"transformations": [
						{
							"name": "Rank1"
						},
						{
							"name": "DENSERANK"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as integer,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nEMPSRC rank(desc(SAL, true),\n\toutput(RANK as long)) ~> Rank1\nRank1 rank(desc(SAL, true),\n\toutput(DENSE_RANK as long),\n\tdense: true) ~> DENSERANK\nDENSERANK sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['rankdense.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TARGET"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rank_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "EMMPSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Rank1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMMPSRC\nEMMPSRC rank(desc(toInteger(SAL), true),\n\toutput(SAL_RANK as long)) ~> Rank1\nRank1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['rank.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCEMPADLS"
						},
						{
							"dataset": {
								"referenceName": "DS_DEPT_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCDEPTADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "EMPTARGETBLOB"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Sort1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCEMPADLS\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCDEPTADLS\nSRCEMPADLS, SRCDEPTADLS join(SRCEMPADLS@DEPTNO == SRCDEPTADLS@Deptno,\n\tjoinType:'outer',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(SRCEMPADLS@DEPTNO=='30') ~> Filter1\nFilter1 sort(asc(ENAME, true)) ~> Sort1\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['empdatafile.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EMPTARGETBLOB"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/exist_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCEMP"
						},
						{
							"dataset": {
								"referenceName": "DS_DEPT_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCDEPT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "TARGETEMP"
						}
					],
					"transformations": [
						{
							"name": "Exists1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCEMP\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCDEPT\nSRCEMP, SRCDEPT exists(SRCEMP@DEPTNO == SRCDEPT@Deptno,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nExists1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['exist_emp.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TARGETEMP"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/exists_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference"
							},
							"name": "DEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "target"
						}
					],
					"transformations": [
						{
							"name": "Exists1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DEPTSRC\nEMPSRC, DEPTSRC exists(EMPSRC@DEPTNO == DEPTSRC@Deptno,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nExists1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['exists-leftsemijoin.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> target"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/flattern_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_JSON_SRC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "TARGET"
						}
					],
					"transformations": [
						{
							"name": "SATELLITES"
						},
						{
							"name": "CUSTOMERS"
						},
						{
							"name": "FLATTEN"
						},
						{
							"name": "SHIPPED"
						}
					],
					"script": "source(output(\n\t\tname as string,\n\t\tlocation as string,\n\t\tsatellites as string[],\n\t\tgoods as (trade as boolean, customers as string[], orders as (orderId as string, orderTotal as double, shipped as (orderItems as (itemName as string, itemQty as string)[]))[])\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'singleDocument') ~> source1\nsource1 foldDown(unroll(satellites),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\tgoods\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SATELLITES\nSATELLITES foldDown(unroll(goods.customers),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\tcustomers = goods.customers,\n\t\torders = goods.orders\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> CUSTOMERS\nCUSTOMERS foldDown(unroll(orders),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\tcustomers,\n\t\torders\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FLATTEN\nFLATTEN foldDown(unroll(orders.shipped.orderItems),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\tcustomers,\n\t\torderId = orders.orderId,\n\t\torderTotal = orders.orderTotal,\n\t\titemName = orders.shipped.orderItems.itemName,\n\t\titemQty = orders.shipped.orderItems.itemQty\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SHIPPED\nSHIPPED sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['flatten.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TARGET"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fulljoin')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference"
							},
							"name": "DEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "target"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DEPTSRC\nEMPSRC, DEPTSRC join(EMPSRC@DEPTNO == DEPTSRC@Deptno,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['fullouterjoin.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> target"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/innerjoins')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "SRCEMP"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference"
							},
							"name": "SRCDEPT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "targetblob"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "deptnofilter"
						},
						{
							"name": "Sort1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> SRCEMP\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCDEPT\nSRCEMP, SRCDEPT join(SRCEMP@DEPTNO == SRCDEPT@Deptno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(SRCEMP@DEPTNO=='30') ~> deptnofilter\ndeptnofilter sort(asc(ENAME, true)) ~> Sort1\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> targetblob"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_flattern_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_JSON_SRC",
								"type": "DatasetReference"
							},
							"name": "JSONDS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "jsonflattern"
						}
					],
					"transformations": [
						{
							"name": "satellites"
						},
						{
							"name": "Customers"
						},
						{
							"name": "orders"
						},
						{
							"name": "shipped"
						}
					],
					"script": "source(output(\n\t\tname as string,\n\t\tlocation as string,\n\t\tsatellites as string[],\n\t\tgoods as (trade as boolean, customers as string[], orders as (orderId as string, orderTotal as double, shipped as (orderItems as (itemName as string, itemQty as string)[]))[])\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'singleDocument') ~> JSONDS\nJSONDS foldDown(unroll(satellites),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\tgoods\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> satellites\nsatellites foldDown(unroll(goods.customers),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\ttrade = goods.trade,\n\t\tcustomers = goods.customers,\n\t\torders = goods.orders\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Customers\nCustomers foldDown(unroll(orders),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\ttrade,\n\t\tcustomers,\n\t\torders\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> orders\norders foldDown(unroll(orders.shipped.orderItems),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\ttrade,\n\t\tcustomers,\n\t\torderId = orders.orderId,\n\t\torderTotal = orders.orderTotal,\n\t\titemName = orders.shipped.orderItems.itemName,\n\t\titemQty = orders.shipped.orderItems.itemQty\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> shipped\nshipped sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['jsonflattern.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> jsonflattern"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/leftjoin')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference"
							},
							"name": "DEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DEPTSRC\nEMPSRC, DEPTSRC join(EMPSRC@DEPTNO == DEPTSRC@Deptno,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['leftjoin.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_EMP_FILE_SRC",
								"type": "DatasetReference"
							},
							"name": "EMPSRC"
						},
						{
							"dataset": {
								"referenceName": "DS_ADLS_FILE_DEPT_SRC",
								"type": "DatasetReference"
							},
							"name": "DEPTSRC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLS_TGT_EMP_FILE",
								"type": "DatasetReference"
							},
							"name": "target"
						}
					],
					"transformations": [
						{
							"name": "Lookup1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EMPSRC\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DEPTSRC\nEMPSRC, DEPTSRC lookup(EMPSRC@DEPTNO == DEPTSRC@Deptno,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 derive(TOTAL_SALARY = toInteger(SAL) + iifNull(toInteger(COMM),0)) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tEMPLOYEE_NUMBER = EMPNO,\n\t\tEMPLOYEE_NAME = ENAME,\n\t\tJOB,\n\t\tMANAGER_ID = MGR,\n\t\tHIREDATE,\n\t\tSALARY = SAL,\n\t\tCOMM,\n\t\tDEPARTMNET_NUMBER = EMPSRC@DEPTNO,\n\t\tTOTAL_SALARY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['lookupwithselect.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> target"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EMP_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCEMP"
						},
						{
							"dataset": {
								"referenceName": "DS_DEPT_SRC_ADLS",
								"type": "DatasetReference"
							},
							"name": "SRCDEPT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ABLB_EMP_TARGET",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Lookup1"
						}
					],
					"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCEMP\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCDEPT\nSRCEMP, SRCDEPT lookup(SRCEMP@DEPTNO == SRCDEPT@Deptno,\n\tmultiple: false,\n\tpickup: 'first',\n\tasc(SRCDEPT@Deptno, true),\n\tbroadcast: 'auto')~> Lookup1\nLookup1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['lookupempfile.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		}
	]
}